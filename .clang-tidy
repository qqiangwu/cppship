---
HeaderFilterRegex: ^(include|src|tests|benches)
Checks: |
  -*
  clang-diagnostic*
  bugprone-argument-comment
  bugprone-assert-side-effect
  bugprone-assignment-in-if-condition
  bugprone-bad-signal-to-kill-thread
  bugprone-bool-pointer-implicit-conversion
  bugprone-branch-clone
  bugprone-casting-through-void
  bugprone-chained-comparison
  bugprone-compare-pointer-to-member-virtual-function
  bugprone-copy-constructor-init
  bugprone-crtp-constructor-accessibility
  bugprone-dangling-handle
  bugprone-dynamic-static-initializers
  bugprone-empty-catch
  bugprone-fold-init-type
  bugprone-forward-declaration-namespace
  bugprone-forwarding-reference-overload
  bugprone-implicit-widening-of-multiplication-result
  bugprone-inaccurate-erase
  bugprone-inc-dec-in-conditions
  bugprone-incorrect-enable-if
  bugprone-incorrect-roundings
  bugprone-infinite-loop
  bugprone-integer-division
  bugprone-lambda-function-name
  bugprone-macro-parentheses
  bugprone-macro-repeated-side-effects
  bugprone-misplaced-operator-in-strlen-in-alloc
  bugprone-misplaced-pointer-arithmetic-in-alloc
  bugprone-misplaced-widening-cast
  bugprone-move-forwarding-reference
  bugprone-multi-level-implicit-pointer-conversion
  bugprone-multiple-new-in-one-expression
  bugprone-multiple-statement-macro
  bugprone-no-escape
  bugprone-non-zero-enum-to-bool-conversion
  bugprone-not-null-terminated-result
  bugprone-optional-value-conversion
  bugprone-parent-virtual-call
  bugprone-pointer-arithmetic-on-polymorphic-object
  bugprone-posix-return
  bugprone-redundant-branch-condition
  bugprone-reserved-identifier
  bugprone-return-const-ref-from-parameter
  bugprone-shared-ptr-array-mismatch
  bugprone-signal-handler
  bugprone-signed-char-misuse
  bugprone-sizeof-container
  bugprone-sizeof-expression
  bugprone-spuriously-wake-up-functions
  bugprone-standalone-empty
  bugprone-string-constructor
  bugprone-string-integer-assignment
  bugprone-string-literal-with-embedded-nul
  bugprone-stringview-nullptr
  bugprone-suspicious-enum-usage
  bugprone-suspicious-include
  bugprone-suspicious-memory-comparison
  bugprone-suspicious-memset-usage
  bugprone-suspicious-missing-comma
  bugprone-suspicious-realloc-usage
  bugprone-suspicious-semicolon
  bugprone-suspicious-string-compare
  bugprone-suspicious-stringview-data-usage
  bugprone-swapped-arguments
  bugprone-switch-missing-default-case
  bugprone-terminating-continue
  bugprone-throw-keyword-missing
  bugprone-too-small-loop-variable
  bugprone-unchecked-optional-access
  bugprone-undefined-memory-manipulation
  bugprone-undelegated-constructor
  bugprone-unhandled-exception-at-new
  bugprone-unhandled-self-assignment
  bugprone-unique-ptr-array-mismatch
  bugprone-unsafe-functions
  bugprone-unused-local-non-trivial-variable
  bugprone-unused-raii
  bugprone-unused-return-value
  bugprone-use-after-move
  bugprone-virtual-near-miss
  clang-analyzer-apiModeling.Errno
  clang-analyzer-apiModeling.TrustNonnull
  clang-analyzer-apiModeling.TrustReturnsNonnull
  clang-analyzer-apiModeling.google.GTest
  clang-analyzer-apiModeling.llvm.CastValue
  clang-analyzer-apiModeling.llvm.ReturnValue
  clang-analyzer-core.BitwiseShift
  clang-analyzer-core.CallAndMessage
  clang-analyzer-core.CallAndMessageModeling
  clang-analyzer-core.DivideZero
  clang-analyzer-core.DynamicTypePropagation
  clang-analyzer-core.NonNullParamChecker
  clang-analyzer-core.NonnilStringConstants
  clang-analyzer-core.NullDereference
  clang-analyzer-core.StackAddrEscapeBase
  clang-analyzer-core.StackAddressEscape
  clang-analyzer-core.UndefinedBinaryOperatorResult
  clang-analyzer-core.VLASize
  clang-analyzer-core.builtin.BuiltinFunctions
  clang-analyzer-core.builtin.NoReturnFunctions
  clang-analyzer-core.uninitialized.ArraySubscript
  clang-analyzer-core.uninitialized.Assign
  clang-analyzer-core.uninitialized.Branch
  clang-analyzer-core.uninitialized.CapturedBlockVariable
  clang-analyzer-core.uninitialized.NewArraySize
  clang-analyzer-core.uninitialized.UndefReturn
  clang-analyzer-cplusplus.ArrayDelete
  clang-analyzer-cplusplus.InnerPointer
  clang-analyzer-cplusplus.Move
  clang-analyzer-cplusplus.NewDelete
  clang-analyzer-cplusplus.PlacementNew
  clang-analyzer-cplusplus.PureVirtualCall
  clang-analyzer-cplusplus.SelfAssignment
  clang-analyzer-cplusplus.SmartPtrModeling
  clang-analyzer-cplusplus.StringChecker
  clang-analyzer-cplusplus.VirtualCallModeling
  clang-analyzer-deadcode.DeadStores
  clang-analyzer-fuchsia.HandleChecker
  clang-analyzer-nullability.NullPassedToNonnull
  clang-analyzer-nullability.NullReturnedFromNonnull
  clang-analyzer-nullability.NullabilityBase
  clang-analyzer-nullability.NullableDereferenced
  clang-analyzer-nullability.NullablePassedToNonnull
  clang-analyzer-nullability.NullableReturnedFromNonnull
  clang-analyzer-optin.core.EnumCastOutOfRange
  clang-analyzer-optin.cplusplus.UninitializedObject
  clang-analyzer-optin.performance.GCDAntipattern
  clang-analyzer-optin.performance.Padding
  clang-analyzer-optin.portability.UnixAPI
  clang-analyzer-optin.taint.TaintedAlloc
  clang-analyzer-security.FloatLoopCounter
  clang-analyzer-security.PutenvStackArray
  clang-analyzer-security.SetgidSetuidOrder
  clang-analyzer-security.cert.env.InvalidPtr
  clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling
  clang-analyzer-security.insecureAPI.SecuritySyntaxChecker
  clang-analyzer-security.insecureAPI.UncheckedReturn
  clang-analyzer-security.insecureAPI.bcmp
  clang-analyzer-security.insecureAPI.bcopy
  clang-analyzer-security.insecureAPI.bzero
  clang-analyzer-security.insecureAPI.decodeValueOfObjCType
  clang-analyzer-security.insecureAPI.getpw
  clang-analyzer-security.insecureAPI.gets
  clang-analyzer-security.insecureAPI.mkstemp
  clang-analyzer-security.insecureAPI.mktemp
  clang-analyzer-security.insecureAPI.rand
  clang-analyzer-security.insecureAPI.strcpy
  clang-analyzer-security.insecureAPI.vfork
  clang-analyzer-unix.API
  clang-analyzer-unix.BlockInCriticalSection
  clang-analyzer-unix.DynamicMemoryModeling
  clang-analyzer-unix.Errno
  clang-analyzer-unix.Malloc
  clang-analyzer-unix.MallocSizeof
  clang-analyzer-unix.MismatchedDeallocator
  clang-analyzer-unix.StdCLibraryFunctions
  clang-analyzer-unix.Stream
  clang-analyzer-unix.Vfork
  clang-analyzer-unix.cstring.BadSizeArg
  clang-analyzer-unix.cstring.CStringModeling
  clang-analyzer-unix.cstring.NullArg
  clang-analyzer-valist.CopyToSelf
  clang-analyzer-valist.Uninitialized
  clang-analyzer-valist.Unterminated
  clang-analyzer-valist.ValistBase
  concurrency-mt-unsafe
  concurrency-thread-canceltype-asynchronous
  cppcoreguidelines-avoid-c-arrays
  cppcoreguidelines-avoid-capturing-lambda-coroutines
  cppcoreguidelines-avoid-const-or-ref-data-members
  cppcoreguidelines-avoid-do-while
  cppcoreguidelines-avoid-goto
  cppcoreguidelines-avoid-magic-numbers
  cppcoreguidelines-avoid-non-const-global-variables
  cppcoreguidelines-avoid-reference-coroutine-parameters
  cppcoreguidelines-c-copy-assignment-signature
  cppcoreguidelines-explicit-virtual-functions
  cppcoreguidelines-init-variables
  cppcoreguidelines-interfaces-global-init
  cppcoreguidelines-macro-to-enum
  cppcoreguidelines-macro-usage
  cppcoreguidelines-misleading-capture-default-by-value
  cppcoreguidelines-missing-std-forward
  cppcoreguidelines-narrowing-conversions
  cppcoreguidelines-no-malloc
  cppcoreguidelines-no-suspend-with-lock
  cppcoreguidelines-noexcept-destructor
  cppcoreguidelines-noexcept-move-operations
  cppcoreguidelines-noexcept-swap
  cppcoreguidelines-non-private-member-variables-in-classes
  cppcoreguidelines-owning-memory
  cppcoreguidelines-prefer-member-initializer
  cppcoreguidelines-pro-bounds-array-to-pointer-decay
  cppcoreguidelines-pro-bounds-constant-array-index
  cppcoreguidelines-pro-bounds-pointer-arithmetic
  cppcoreguidelines-pro-type-const-cast
  cppcoreguidelines-pro-type-cstyle-cast
  cppcoreguidelines-pro-type-member-init
  cppcoreguidelines-pro-type-reinterpret-cast
  cppcoreguidelines-pro-type-static-cast-downcast
  cppcoreguidelines-pro-type-union-access
  cppcoreguidelines-pro-type-vararg
  cppcoreguidelines-rvalue-reference-param-not-moved
  cppcoreguidelines-slicing
  cppcoreguidelines-special-member-functions
  cppcoreguidelines-use-default-member-init
  cppcoreguidelines-virtual-class-destructor
  google-build-namespaces
  google-explicit-constructor
  google-global-names-in-headers
  google-readability-todo
  google-runtime-operator
  misc-confusable-identifiers
  misc-coroutine-hostile-raii
  misc-definitions-in-headers
  misc-header-include-cycle
  misc-misleading-bidirectional
  misc-misleading-identifier
  misc-misplaced-const
  misc-new-delete-overloads
  misc-no-recursion
  misc-non-copyable-objects
  misc-non-private-member-variables-in-classes
  misc-redundant-expression
  misc-static-assert
  misc-throw-by-value-catch-by-reference
  misc-unconventional-assign-operator
  misc-uniqueptr-reset-release
  misc-unused-alias-decls
  misc-unused-parameters
  misc-unused-using-decls
  misc-use-anonymous-namespace
  misc-use-internal-linkage
  modernize-avoid-bind
  modernize-avoid-c-arrays
  modernize-concat-nested-namespaces
  modernize-deprecated-headers
  modernize-deprecated-ios-base-aliases
  modernize-loop-convert
  modernize-macro-to-enum
  modernize-make-shared
  modernize-make-unique
  modernize-min-max-use-initializer-list
  modernize-raw-string-literal
  modernize-redundant-void-arg
  modernize-replace-auto-ptr
  modernize-replace-disallow-copy-and-assign-macro
  modernize-replace-random-shuffle
  modernize-return-braced-init-list
  modernize-shrink-to-fit
  modernize-type-traits
  modernize-unary-static-assert
  modernize-use-auto
  modernize-use-bool-literals
  modernize-use-constraints
  modernize-use-default-member-init
  modernize-use-designated-initializers
  modernize-use-emplace
  modernize-use-equals-default
  modernize-use-equals-delete
  modernize-use-noexcept
  modernize-use-nullptr
  modernize-use-override
  modernize-use-ranges
  modernize-use-starts-ends-with
  modernize-use-std-format
  modernize-use-std-numbers
  modernize-use-std-print
  modernize-use-transparent-functors
  modernize-use-uncaught-exceptions
  modernize-use-using
  performance-enum-size
  performance-faster-string-find
  performance-for-range-copy
  performance-implicit-conversion-in-loop
  performance-inefficient-algorithm
  performance-inefficient-string-concatenation
  performance-inefficient-vector-operation
  performance-move-const-arg
  performance-move-constructor-init
  performance-no-automatic-move
  performance-no-int-to-ptr
  performance-noexcept-destructor
  performance-noexcept-move-constructor
  performance-noexcept-swap
  performance-trivially-destructible
  performance-type-promotion-in-math-fn
  performance-unnecessary-copy-initialization
  performance-unnecessary-value-param
  portability-restrict-system-includes
  portability-simd-intrinsics
  portability-std-allocator-const
  readability-avoid-const-params-in-decls
  readability-avoid-nested-conditional-operator
  readability-avoid-return-with-void-value
  readability-avoid-unconditional-preprocessor-if
  readability-braces-around-statements
  readability-const-return-type
  readability-container-contains
  readability-container-data-pointer
  readability-container-size-empty
  readability-delete-null-pointer
  readability-duplicate-include
  readability-else-after-return
  readability-enum-initial-value
  readability-function-cognitive-complexity
  readability-function-size
  readability-identifier-naming
  readability-implicit-bool-conversion
  readability-inconsistent-declaration-parameter-name
  readability-isolate-declaration
  readability-math-missing-parentheses
  readability-misleading-indentation
  readability-misplaced-array-index
  readability-non-const-parameter
  readability-operators-representation
  readability-qualified-auto
  readability-redundant-casting
  readability-redundant-control-flow
  readability-redundant-declaration
  readability-redundant-function-ptr-dereference
  readability-redundant-inline-specifier
  readability-redundant-member-init
  readability-redundant-preprocessor
  readability-redundant-smartptr-get
  readability-redundant-string-cstr
  readability-redundant-string-init
  readability-reference-to-constructed-temporary
  readability-simplify-boolean-expr
  readability-simplify-subscript-expr
  readability-static-accessed-through-instance
  readability-static-definition-in-anonymous-namespace
  readability-string-compare
  readability-suspicious-call-argument
  readability-uniqueptr-delete-release
  readability-uppercase-literal-suffix
  readability-use-anyofallof
  readability-use-std-min-max
WarningsAsErrors: '*'
InheritParentConfig: false
CheckOptions:
  - key: readability-identifier-naming.AbstractClassCase
    value: CamelCase
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.UnionCase
    value: CamelCase
  - key: readability-identifier-naming.EnumCase
    value: CamelCase
  - key: readability-identifier-naming.TypeAliasCase
    value: CamelCase

  - key: readability-identifier-naming.FunctionCase
    value: lower_case
  - key: readability-identifier-naming.MethodCase
    value: lower_case
  - key: readability-identifier-naming.PrivateMethodSuffix
    value: _
  - key: readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE
  - key: readability-identifier-naming.LocalVariableCase
    value: lower_case

  - key: readability-identifier-naming.StaticVariableCase
    value: UPPER_CASE
  - key: readability-identifier-naming.ConstexprVariableCase
    value: CamelCase
  - key: readability-identifier-naming.ConstexprVariablePrefix
    value: k

  - key: readability-function-cognitive-complexity.IgnoreMacros
    value: true

  - key: misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
    value: true

#### Disabled checks and why: #####
#
# -readability-convert-member-functions-to-static
#     This check started going off in the upgrade from clang-tidy-8 to clang-tidy-12.  It is not always correct because
#     we hide the reference implementation in another repository.
# -readability-redundant-access-specifiers
#     make code cleaner
# -readability-magic-numbers
#     duplicated with cppcoreguidelines-avoid-magic-numbers
# -clang-analyzer-security.insecureAPI.rand, -clang-analyzer-security.insecureAPI.rand, -bugprone-unhandled-self-assignment,
# -bugprone-narrowing-conversions
#     Dup with cppcoreguidelines-narrowing-conversions
# -bugprone-easily-swappable-parameters
#     Too many false positives
# -bugprone-exception-escape: noisy
# -modernize-use-nodiscard,
#     New C++17 feature, slightly polarizing. Would clutter codebase.
# -modernize-use-trailing-return-type
# -modernize-pass-by-value
#     Useless
# -readability-magic-numbers
#     Let's not deal with people doing ridiculous things to hack around this. If it bites them, it bites them.
# -readability-named-parameter
#     Unused parameter is unnamed
# -readability-identifier-length
#     Too verbose
# -clang-diagnostic-implicit-int-float-conversion, -readability-make-member-function-const,
#
# -clang-analyzer-cplusplus.NewDeleteLeaks
#     Too many false-positives
# -clang-analyzer-optin.cplusplus.VirtualCall: noisy
# -misc-const-correctness
#     Too slow
# -misc-include-cleaner: too noisy
# -performance-avoid-endl
# -google-readability-avoid-underscore-in-googletest-name